#!/bin/bash

install-containers() {
  echo password=$(echo [REDACTED] | base64 -d) > ~/Docker/.env
  cp ~/Other\ Stuff/Docker/docker-compose.yml ~/Docker/docker-compose.yml
  docker compose -f ~/Docker/docker-compose.yml up -d --remove-orphans
}

backup-containers() {
  echo -e "\n\033[1mRunning prerequisites for NetAlertX\033[0m\n"
  for i in backup bak; do
    sudo bash -i -c "rm -f /home/farmerbb/Docker/netalertx/config/*.$i"
  done

  sudo sed -i 's/SETPWD_enable_password=True/SETPWD_enable_password=False/' ~/Docker/netalertx/config/app.conf
  sudo curl http://192.168.86.10:20211/php/server/devices.php?action=ExportCSV -o ~/Docker/netalertx/config/devices.csv
  sudo sed -i 's/SETPWD_enable_password=False/SETPWD_enable_password=True/' ~/Docker/netalertx/config/app.conf

  docker stop netalertx

  echo -e "\n\033[1mRunning rclone backups\033[0m\n"
  for i in adguardhome/conf esphome netalertx wireguard; do
    rclone-backup $i
  done

  docker start netalertx

  echo -e "\n\033[1mRunning Home Assistant backup\033[0m\n"
  home-assistant-backup

  echo -e "\n\n\033[1mRunning OctoPrint backup\033[0m\n"
  BACKUP_PATH=$(docker exec -it octoprint octoprint --basedir /octoprint/octoprint plugins backup:backup | tee /dev/stderr | tail -1 | cut -d' ' -f4 | sed 's/'$'\r//')
  rm ~/OneDrive/Other\ Stuff/Docker/octoprint-*
  docker cp octoprint:$BACKUP_PATH ~/OneDrive/Other\ Stuff/Docker/
  docker exec -it octoprint rm $BACKUP_PATH
}

rclone-backup() {
  sudo rclone \
    --config /home/farmerbb/.config/rclone/rclone.conf \
    sync -v /home/farmerbb/Docker/$1 "OneDrive:Other Stuff/Docker/$1" \
    --exclude="/logs**" \
    --exclude="/.esphome**"
}

backup-yml() {
  for i in OneDrive/Other\ Stuff/Docker Other\ Stuff/Docker; do
    cp ~/Docker/docker-compose.yml "/home/farmerbb/$i/docker-compose.yml"
  done
}

print-usage() {
  BASENAME=$(basename "$0")
  echo -e "\033[1mUsage:\033[0m $BASENAME  <install | backup | shell>"
  exit 1
}

[[ -z $(which docker) ]] && \
  echo "Please run install-docker before running this script." && \
  exit 1

case $1 in
  install)
    install-containers
    exit 0
  ;;

  shell)
    [[ -z $2 ]] && \
      echo "\"shell\" requires a container name to be specified" && \
      exit 1

    docker exec -it $2 bash || docker exec -it $2 sh
    exit 0
  ;;

  backup)
    backup-containers
    backup-yml
    exit 0
  ;;

  *)
    print-usage
  ;;
esac

print-usage
