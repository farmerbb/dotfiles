#!/bin/bash

CONTAINERS=(
  adguardhome
  homeassistant
  wireguard
  wyze-bridge
)

install-container() {
  case $1 in
    adguardhome)
      mkdir -p ~/adguardhome/work
      mkdir -p ~/adguardhome/conf
      mkdir -p ~/certs

      docker pull adguard/adguardhome:latest
      docker stop adguardhome 2&>/dev/null
      docker rm adguardhome 2&>/dev/null

      docker run -d \
        --name adguardhome \
        --restart unless-stopped \
        -v /home/farmerbb/adguardhome/work:/opt/adguardhome/work \
        -v /home/farmerbb/adguardhome/conf:/opt/adguardhome/conf \
        -v /home/farmerbb/certs:/etc/letsencrypt \
        -p 192.168.86.10:53:53/tcp -p 192.168.86.10:53:53/udp \
        -p 80:80/tcp -p 443:443/tcp -p 443:443/udp -p 3000:3000/tcp \
        -p 853:853/tcp \
        adguard/adguardhome:latest
    ;;

    homeassistant)
      mkdir -p ~/Home\ Assistant
      mkdir -p ~/certs

      docker pull ghcr.io/home-assistant/home-assistant:stable
      docker stop homeassistant 2&>/dev/null
      docker rm homeassistant 2&>/dev/null

      docker run -d \
        --name homeassistant \
        --privileged \
        --restart=unless-stopped \
        -e TZ=America/Denver \
        -v /home/farmerbb/Home\ Assistant:/config \
        -v /home/farmerbb/certs:/etc/letsencrypt \
        --network=host \
        ghcr.io/home-assistant/home-assistant:stable
    ;;

    wireguard)
      [[ $SSH_CONNECTION =~ 10.13.13 ]] && \
        echo "Skipping installation of wireguard container" && \
        return 0

      docker pull lscr.io/linuxserver/wireguard:latest
      docker stop wireguard 2&>/dev/null
      docker rm wireguard 2&>/dev/null

      docker run -d \
        --name=wireguard \
        --cap-add=NET_ADMIN \
        --network=host \
        -e PUID=1000 \
        -e PGID=1000 \
        -e TZ=America/Denver \
        -e SERVERURL=[REDACTED] \
        -e SERVERPORT=[REDACTED] \
        -e PEERS=5 \
        -e PEERDNS=none \
        -e ALLOWEDIPS=10.13.13.0/24,192.168.86.0/24 \
        -e LOG_CONFS=true \
        -v /home/farmerbb/WireGuard:/config \
        --restart unless-stopped \
        lscr.io/linuxserver/wireguard:latest
    ;;

    wyze-bridge)
      docker pull mrlt8/wyze-bridge:latest
      docker stop wyze-bridge 2&>/dev/null
      docker rm wyze-bridge 2&>/dev/null

      docker run -d \
        --name=wyze-bridge \
        -e WYZE_EMAIL=[REDACTED] \
        -e WYZE_PASSWORD=$(echo [REDACTED] | base64 -d) \
        -e TOTP_KEY=[REDACTED] \
        -e API_ID=[REDACTED] \
        -e API_KEY=[REDACTED] \
        -e WB_API=[REDACTED] \
        -e WB_IP=192.168.86.10 \
        -e ENABLE_AUDIO=true \
        -p 1935:1935 -p 8554:8554 -p 8888:8888 -p 5000:5000 \
        -p 8889:8889 -p 8189:8189/udp \
        --restart unless-stopped \
        mrlt8/wyze-bridge:latest
    ;;
  esac
}

remove-container() {
  docker stop $1 2&>/dev/null
  docker rm $1 2&>/dev/null
}

print-usage() {
  BASENAME=$(basename "$0")
  echo -e "\033[1mContainers:\033[0m"
  for i in "${CONTAINERS[@]}"; do echo $i; done
  echo
  echo -e "\033[1mUsage:\033[0m $BASENAME  <install | start | remove>  <container-name | all>"
  exit 1
}

[[ -z $(which docker) ]] && \
  echo "Please run install-docker before running this script." && \
  exit 1

[[ $# -ne 2 ]] && print-usage

if [[ "${CONTAINERS[@]}" =~ $2 || $2 = all ]]; then
  case $1 in
    install)
      if [[ $2 = all ]]; then
        for i in "${CONTAINERS[@]}"; do install-container $i; done
      else
        install-container $2
      fi
      exit 0
    ;;

    start)
      if [[ $2 = all ]]; then
        for i in "${CONTAINERS[@]}"; do docker start $i; done
      else
        docker start $2
      fi
      exit 0
    ;;

    remove)
      if [[ $2 = all ]]; then
        printf "Press Enter if you really want to remove all containers, or CTRL+C to abort..."
        read _

        for i in "${CONTAINERS[@]}"; do remove-container $i; done
      else
        remove-container $2
      fi

      sudo docker system prune --volumes -a -f
      exit 0
    ;;

    *)
      print-usage
    ;;
  esac
fi

print-usage
