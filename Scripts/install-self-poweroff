#!/bin/bash

if [[ $(whoami) != root ]]; then
  sudo "$0"
  exit $?
fi

echo "Creating swapfile..."
swapoff /swapfile > /dev/null 2>&1
rm -f /swapfile

dd if=/dev/zero of=/swapfile bs=$(getconf PAGE_SIZE) count=$(getconf _PHYS_PAGES)
dd if=/dev/zero of=/swapfile ibs=4096 count=1 obs=4096 oflag=append conv=notrunc

chmod 600 /swapfile
mkswap /swapfile

echo
echo "Please add the following arguments to GRUB_CMD_LINUX_DEFAULT:"
echo
echo "  resume=UUID=$(findmnt -no UUID -T /swapfile) resume_offset=$(sudo filefrag -v /swapfile | awk '$1=="0:" {print substr($4, 1, length($4)-2)}')"
echo

printf "Press Enter to continue..."
read _

su farmerbb -c '/bin/bash -i -c edit-grub-config'



# Begin self-poweroff install script
# From https://unix.stackexchange.com/a/646901



sysd=/etc/systemd/system

set -e

mkdir -p "$sysd/systemd-suspend.service.d"

cat > "$sysd/systemd-suspend.service.d/99-trigger-system-back-after-suspend.conf" <<'EOF'
[Service]
ExecStopPost=-/bin/systemctl --no-block start system-is-back-after-suspend.target
EOF

cat > "$sysd/cancel-self-poweroff.service" <<'EOF'
[Unit]
Description=Cancel self-poweroff after suspend
After=system-is-back-after-suspend.target
Conflicts=self-poweroff.timer

[Service]
Type=oneshot
ExecStart=/bin/rm -f /run/systemd/system/self-poweroff.timer

[Install]
WantedBy=system-is-back-after-suspend.target
EOF

cat > "$sysd/self-poweroff.service" <<'EOF'
[Unit]
Description=Actual self-poweroff after suspend
After=suspend.target
Before=system-is-back-after-suspend.target
RefuseManualStart=true

[Service]
Type=oneshot
ExecStart=/usr/sbin/swapon /swapfile
ExecStart=/bin/systemctl --no-block hibernate
# Uncomment the following line while commenting out the above line for testing.
#ExecStart=/bin/echo poweroff
# Note the echoed string goes to systemd journal log.
# Do a `systemctl daemon-reload` after modifying this file.
EOF

cat > "$sysd/schedule-self-poweroff.service" <<'EOF'
[Unit]
Description=Schedulation of self-poweroff after some time spent in suspend state
Before=systemd-suspend.service
Requisite=suspend.target

[Service]
Type=oneshot
EnvironmentFile=/etc/self-poweroff.conf
ExecStartPre=/bin/sh -c 'printf -- %%s\\\\n "[Timer]" "Persistent=yes" "OnCalendar=$(date -d "now + ${MY_SUSPEND_TIMEOUT}" "+%%Y-%%m-%%d %%H:%%M:%%S")" "AccuracySec=1s" "WakeSystem=yes" >| /run/systemd/system/self-poweroff.timer'
ExecStart=/bin/systemctl start self-poweroff.timer
# On systemd 237 onwards (Fedora 28 onwards) you may uncomment the line below while commenting out the above ExecStart and ExecStartPre lines
#ExecStart=/bin/sh -c 'systemd-run --on-calendar="$(date -d "now + ${MY_SUSPEND_TIMEOUT}" "+%%Y-%%m-%%d %%H:%%M:%%S")" --timer-property=AccuracySec=1s --timer-property=WakeSystem=yes --timer-property=Persistent=yes --unit=self-poweroff.service'
# Do a `systemctl daemon-reload` after modifying this file.

[Install]
WantedBy=suspend.target
EOF

cat > "$sysd/system-is-back-after-suspend.target" <<'EOF'
[Unit]
Description=Synchronization point for self-poweroff after suspend
DefaultDependencies=no
After=suspend.target
StopWhenUnneeded=yes
EOF

cat > /etc/self-poweroff.conf <<'EOF'
MY_SUSPEND_TIMEOUT=2 hours
EOF

systemctl enable schedule-self-poweroff.service cancel-self-poweroff.service
systemctl daemon-reload



# End self-poweroff install script



cat > /lib/systemd/system-sleep/99-disable-swapfile <<'EOF'
#!/bin/sh

case "$1" in
  post)
    /usr/sbin/swapoff /swapfile
    ;;
esac
EOF

chmod +x /lib/systemd/system-sleep/99-disable-swapfile

echo
echo "Please reboot to apply changes."
