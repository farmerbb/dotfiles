#!/bin/bash

print-usage() {
  if [[ $1 != skip-vm-list ]]; then
    echo "VMs:"
    ls -1 /mnt/VMs/*.img | cut -d'/' -f4 | cut -d'.' -f1
    echo
  fi

  BASENAME=$(basename "$0")
  echo "Usage: $BASENAME <name-of-vm> <name-of-backup>"
  exit 1
}

print-available-backups() {
  ls -1 /mnt/VMs/backups/$1~*.img >/dev/null 2>&1
  if [[ $? = 0 ]]; then
    echo "Available backups:"
    ls -1 /mnt/VMs/backups/$1~*.img | cut -d'~' -f2 | cut -d'.' -f1
    echo
  fi

  print-usage skip-vm-list
}

[[ $# -eq 1 ]] && print-available-backups $1
[[ $# -ne 2 ]] && print-usage

NAME=$2
IMAGE_ORIGINAL=/mnt/VMs/$1.img
IMAGE_BACKUP=/mnt/VMs/backups/$1~$NAME.img
XML_BACKUP=/mnt/VMs/backups/$1~$NAME.xml

[[ ! -f "$IMAGE_BACKUP" ]] && print-available-backups $1
[[ ! -f "$IMAGE_ORIGINAL" ]] && print-usage

while sudo virsh list | grep $1 >/dev/null 2>&1; do
  echo "Not restoring backup while VM is running"
  exit 1
done

sudo rm -f "$IMAGE_ORIGINAL"

# lsattr -l "$IMAGE_BACKUP" | grep -q No_COW
# if [[ $? = 0 ]]; then
#   touch "$IMAGE_ORIGINAL"
#   chattr +C "$IMAGE_ORIGINAL"
# fi

sudo cp --reflink=auto --sparse=auto "$IMAGE_BACKUP" "$IMAGE_ORIGINAL"
[[ -f "$XML_BACKUP" ]] && sudo virsh define "$XML_BACKUP" >/dev/null

if [[ $1 = macos* ]]; then
  sudo rm -rf /mnt/VMs/OSX-KVM
  sudo cp -r --reflink=auto --sparse=auto /mnt/VMs/backups/OSX-KVM~$NAME /mnt/VMs/OSX-KVM
fi
